services:
  boardapi-dev:
    build:
      context: .
      args:
        - USER=node # Already exist User node
        #- USER_ID=${USER_ID:-1000}
        #- GROUP_ID=${GROUP_ID:-1000}
    image: boardapi-dev
    container_name: boardapi-dev
    ports:
      - "3000:3000"
    volumes:
      - type: bind
        source: ../
        target: /BoardApi
    depends_on:
      - boarddb
    tty: true
    command: sh

  boarddb:
    image: postgres:alpine
    container_name: boarddb
    environment:
        - POSTGRES_USER=boardapi
        - POSTGRES_PASSWORD=boardapi
        - PGPASSWORD=boardapi
        - POSTGRES_DB=boardapi
    volumes:
        - type: volume
          source: boarddb
          target: /var/lib/postgresql
        - type: volume
          source: boarddb-data
          target: /var/lib/postgresql/data

  boarddb-console:
    image: adminer
    container_name: boarddb-console
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=boarddb
    depends_on:
      - boarddb


volumes:
  boarddb:
    name: boarddb
  boarddb-data:
    name: boarddb-data
